name: Release

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [15.4.0]

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install yarn
        run: npm install yarn -g
      - name: Install dependencies
        run: yarn
      - name: Make Gradle executable
        run: chmod +x ./android/gradlew
      - name: Get version from CHANGELOG.md
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          path: ./CHANGELOG.md
      - name: Changelog version
        run: echo '${{ steps.changelog_reader.outputs.version }}'
      - name: Android version code
        run: echo '${{github.run_number}}'
      - name: Increment the Android version code
        uses: chkfung/android-version-actions@v1.1
        with:
          gradlePath: android/app/build.gradle
          versionCode: ${{github.run_number}}
          versionName: ${{steps.changelog_reader.outputs.version}}
      - name: Build Release APK
        run: cd android && ./gradlew assembleRelease
      - uses: r0adkll/sign-android-release@v1
        name: Sign APK
        id: sign_app
        with:
          releaseDirectory: android/app/build/outputs/apk/release/
          signingKeyBase64: ${{ secrets.SIGNING_KEY_JKS_BASE64 }}
          alias: ${{ secrets.SIGNING_KEY_ALIAS }}
          keyStorePassword: ${{ secrets.SIGNING_KEY_KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.SIGNING_KEY_KEY_PASSWORD }}
      - name: Upload Signed APK artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release-signed.apk
          path: ${{steps.sign_app.outputs.signedReleaseFile}}
          if-no-files-found: error
      - name: Upload changelog artifact
        uses: actions/upload-artifact@v2
        with:
          name: CHANGELOG.md
          path: ./CHANGELOG.md
          retention-days: 1
          if-no-files-found: error

  github_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download CHANGELOG
        uses: actions/download-artifact@v2
        with:
          name: CHANGELOG.md
          path: artifacts/
      - name: Get version from CHANGELOG.md
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          path: artifacts/CHANGELOG.md
      - name: Push a tag
        id: push_tag
        uses: mathieudutour/github-tag-action@v4.6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.changelog_reader.outputs.version }}
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.changelog_reader.outputs.version }}
          release_name: ${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: false
      - name: Download APK
        uses: actions/download-artifact@v2
        with:
          name: app-release-signed.apk
          path: artifacts/
      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/app-release-signed.apk
          asset_name: app-release-signed.apk
          asset_content_type: application/executable

  playstore_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download APK
        uses: actions/download-artifact@v2
        with:
          name: app-release-signed.apk
          path: artifacts/
      - name: Create service_account.json
        run: echo '${{ secrets.GOOGLE_SERVICE_ACCOUNT }}' > service_account.json
      - name: Upload Android Release to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJson: service_account.json
          packageName: com.zenzizenzi.camhelp
          releaseFiles: artifacts/app-release-signed.apk
