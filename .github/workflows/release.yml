name: Release

on:
  pull_request
  # push:
  #   branches:
  #     - master

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [15.4.0]

    steps:
      - uses: actions/checkout@v2
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Install NodeJS ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install yarn
        run: npm install yarn -g
      - name: Install dependencies
        run: yarn
      - name: Make Gradle executable
        run: chmod +x ./android/gradlew
      - name: Build Release APK
        run: cd android && ./gradlew assembleRelease
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: app-release.apk
          path: android/app/build/outputs/apk/release/
      - name: Upload changelog
        uses: actions/upload-artifact@v2
        with:
          name: CHANGELOG.md
          path: ./CHANGELOG.md
          retention-days: 1

  github_release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v2
      - name: Get version from CHANGELOG.md
        id: changelog_reader
        uses: mindsers/changelog-reader-action@v2
        with:
          path: ./CHANGELOG.md

      # - name: Push a tag
      #   id: push_tag
      #   uses: mathieudutour/github-tag-action@v4.6
      #   with:
      #     github_token: ${{ secrets.GITHUB_TOKEN }}
      #     custom_tag: ${{ steps.changelog_reader.outputs.version }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.changelog_reader.outputs.version }}
          release_name: ${{ steps.changelog_reader.outputs.version }}
          body: ${{ steps.changelog_reader.outputs.changes }}
          prerelease: ${{ steps.changelog_reader.outputs.status == 'prereleased' }}
          draft: true

      - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1.0.2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/executable

  #  playstore_release:
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #   - name: Upload Android Release to Play Store
  #     uses: r0adkll/upload-google-play@v1
  #     with:
  #       serviceAccountJson: ${{ SERVICE_ACCOUNT_JSON }}
  #       packageName: com.zenzizenzi.camhelp
  #       releaseFile: ${{ SIGNED_RELEASE_FILE}}
  #       track: production
  #       inAppUpdatePriority: 0
  #       userFraction: 1
  #     whatsNewDirectory: distribution/whatsnew
  #       mappingFile: app/build/outputs/mapping/release/mapping.txt
